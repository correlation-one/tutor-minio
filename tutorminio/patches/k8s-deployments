---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: minio
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
    spec:
      containers:
        - name: minio
          image: {{ MINIO_DOCKER_IMAGE }}
          {% if not MINIO_GATEWAY %}
          args: ["server", "--address", ":9000", "--console-address", ":9001", "/data"]
          {% elif MINIO_GATEWAY == "gcs" %}
          args: ["gateway", "gcs", "{{ MINIO_GCS_APPLICATION_ID }}", "--address", ":9000", "--console-address", ":9001"]
          {% else %}
          args: ["gateway", "{{ MINIO_GATEWAY }}", "--address", ":9000", "--console-address", ":9001"]
          {% endif %}
          env:
            - name: MINIO_ROOT_USER
              value: "{{ OPENEDX_AWS_ACCESS_KEY }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ OPENEDX_AWS_SECRET_ACCESS_KEY }}"
          {% if MINIO_GATEWAY == "gcs" %}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/minio_secrets/google_application_credentials.json"
          {% endif %}
          ports:
            - containerPort: 9000
            - containerPort: 9001
          {% if not MINIO_GATEWAY %}
          volumeMounts:
            - mountPath: /data
              name: data
          {% elif MINIO_GATEWAY == "gcs" %}
          volumeMounts:
            - mountPath: /minio_secrets
              name: minio-secrets
          {% endif %}
      {% if not MINIO_GATEWAY %}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
      {% elif MINIO_GATEWAY == "gcs" %}
      volumes:
        - name: minio-secrets
          configMap:
            name: minio-secrets
      {% endif %}
